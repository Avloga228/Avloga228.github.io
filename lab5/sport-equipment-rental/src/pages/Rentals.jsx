import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { onAuthStateChanged } from "firebase/auth";
import { auth, db } from "../firebase";
import { collection, doc, deleteDoc, updateDoc, increment } from "firebase/firestore";
import { apiPath } from '../config';
import './Rentals.css';

function Rentals() {
  const [user, setUser] = useState(undefined);
  const [rentedItems, setRentedItems] = useState([]);
  const [loading, setLoading] = useState(true);
  const [priceFilter, setPriceFilter] = useState({ min: '', max: '' });
  const navigate = useNavigate();

  // –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      setUser(currentUser);
      setLoading(currentUser !== undefined ? false : true);
    });
    return () => unsubscribe();
  }, []);

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Ä–µ–Ω–¥ –∑ API
  useEffect(() => {
    const fetchUserRentals = async (userId) => {
      try {
        setLoading(true);
        // –°—Ç–≤–æ—Ä—é—î–º–æ URL –∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó —Ü—ñ–Ω–∏, —è–∫—â–æ –≤–æ–Ω–∏ –∑–∞–¥–∞–Ω—ñ
        let path = `rentals?userId=${userId}`;
        
        if (priceFilter.min) {
          path += `&minPrice=${priceFilter.min}`;
        }
        
        if (priceFilter.max) {
          path += `&maxPrice=${priceFilter.max}`;
        }
        
        const requestUrl = apiPath(path);
        console.log("API –∑–∞–ø–∏—Ç –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –æ—Ä–µ–Ω–¥ –Ω–∞ URL:", requestUrl);
        
        const response = await fetch(requestUrl, {
          // –î–æ–¥–∞—î–º–æ credentials –¥–ª—è –∫—É–∫ –∫—Ä–æ—Å-–¥–æ–º–µ–Ω–Ω–æ
          credentials: 'include',
          headers: {
            // –î–æ–¥–∞—î–º–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
            'X-Client-Source': 'vercel-frontend'
          }
        });
        
        console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –∑–∞–ø–∏—Ç –æ—Ä–µ–Ω–¥:", response.status, response.statusText);
        
        if (!response.ok) {
          throw new Error('–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–∞–Ω—ñ –ø—Ä–æ –æ—Ä–µ–Ω–¥–∏');
        }
        
        const data = await response.json().catch(e => {
          console.error("–ü–æ–º–∏–ª–∫–∞ —Ä–æ–∑–ø–∞—Ä—Å—é–≤–∞–Ω–Ω—è JSON:", e);
          return [];
        });
        console.log("–û—Ç—Ä–∏–º–∞–Ω—ñ –¥–∞–Ω—ñ –æ—Ä–µ–Ω–¥:", data);
        
        setRentedItems(data);
      } catch (error) {
        console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ—Ç—Ä–∏–º–∞–Ω–Ω—ñ –æ—Ä–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤:', error);
      } finally {
        setLoading(false);
      }
    };

    if (user) {
      fetchUserRentals(user.uid);
    }
  }, [user, priceFilter]);

  // –û–±—Ä–æ–±–Ω–∏–∫ –∑–º—ñ–Ω–∏ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —Ü—ñ–Ω–∏
  const handlePriceFilterChange = (e) => {
    const { name, value } = e.target;
    setPriceFilter(prev => ({ ...prev, [name]: value }));
  };

  // –ó–∞—Å—Ç–æ—Å—É–≤–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
  const applyPriceFilter = (e) => {
    e.preventDefault();
    // –§—ñ–ª—å—Ç—Ä–∏ –∑–∞—Å—Ç–æ—Å–æ–≤—É—é—Ç—å—Å—è —á–µ—Ä–µ–∑ effect –ø—Ä–∏ –∑–º—ñ–Ω—ñ priceFilter
  };

  // –°–∫–∏–¥–∞–Ω–Ω—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤
  const resetFilters = () => {
    setPriceFilter({ min: '', max: '' });
  };

  // –í–∏–¥–∞–ª–µ–Ω–Ω—è –æ—Ä–µ–Ω–¥–∏
  const handleDelete = async (id) => {
    try {
      const itemToDelete = rentedItems.find(item => item.id === id);
      if (!itemToDelete) return;

      // 1. –í–∏–¥–∞–ª—è—î–º–æ –æ—Ä–µ–Ω–¥—É –∑ Firestore
      await deleteDoc(doc(db, "rentals", id));
      setRentedItems(rentedItems.filter(item => item.id !== id));

      // 2. –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ —Ç–æ–≤–∞—Ä –Ω–∞ —Å–∫–ª–∞–¥ (–∑–±—ñ–ª—å—à—É—î–º–æ quantity —É inventory)
      if (itemToDelete.equipmentId) {
        const inventoryRef = doc(db, "inventory", String(itemToDelete.equipmentId));
        await updateDoc(inventoryRef, {
          quantity: increment(1)
        });
      }
    } catch (error) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–¥–∞–ª–µ–Ω–Ω—ñ –æ—Ä–µ–Ω–¥–∏:", error);
    }
  };

  const handlePayment = (id) => {
    navigate('/payment', { state: { payIds: [id] } });
  };

  const handlePayAll = () => {
    const allPendingIds = rentedItems.filter(item => item.status === '–æ—á—ñ–∫—É—î –æ–ø–ª–∞—Ç–∏').map(item => item.id);
    navigate('/payment', { state: { payIds: allPendingIds } });
  };

  if (loading) {
    return <div style={{textAlign: "center", marginTop: "40px", color: "#ff782b"}}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>;
  }

  if (!user) {
    return (
      <div className="rentals-page">
        <h1>–ú–æ—ó –æ—Ä–µ–Ω–¥–∏</h1>
        <div className="rentals-content">
          <div className="empty-rentals">
            <div className="empty-rentals-icon">üîí</div>
            <h2>–©–æ–± –ø–µ—Ä–µ–≥–ª—è–¥–∞—Ç–∏ —Å–≤–æ—ó –æ—Ä–µ–Ω–¥–∏, —É–≤—ñ–π–¥—ñ—Ç—å —É –∞–∫–∞—É–Ω—Ç</h2>
            <p>
              <a href="/login" style={{ color: "#ff782b", textDecoration: "underline" }}>–£–≤—ñ–π—Ç–∏</a>
            </p>
          </div>
        </div>
      </div>
    );
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —î —Ç–æ–≤–∞—Ä–∏, —è–∫—ñ –æ—á—ñ–∫—É—é—Ç—å –æ–ø–ª–∞—Ç–∏
  const hasPendingItems = rentedItems.some(item => item.status === '–æ—á—ñ–∫—É—î –æ–ø–ª–∞—Ç–∏');

  return (
    <div className="rentals-page">
      <h1>–ú–æ—ó –æ—Ä–µ–Ω–¥–∏</h1>
      
      {/* –î–æ–¥–∞—î–º–æ —Ñ—ñ–ª—å—Ç—Ä –∑–∞ —Ü—ñ–Ω–æ—é */}
      <div className="filter-container">
        <form onSubmit={applyPriceFilter} className="price-filter">
          <div className="filter-group">
            <label>–¶—ñ–Ω–∞ –≤—ñ–¥:</label>
            <input 
              type="number" 
              name="min" 
              value={priceFilter.min} 
              onChange={handlePriceFilterChange} 
              placeholder="–ú—ñ–Ω. —Ü—ñ–Ω–∞"
            />
          </div>
          <div className="filter-group">
            <label>–¥–æ:</label>
            <input 
              type="number" 
              name="max" 
              value={priceFilter.max} 
              onChange={handlePriceFilterChange} 
              placeholder="–ú–∞–∫—Å. —Ü—ñ–Ω–∞"
            />
          </div>
          <button type="submit" className="apply-filter">–ó–∞—Å—Ç–æ—Å—É–≤–∞—Ç–∏</button>
          <button type="button" className="reset-filter" onClick={resetFilters}>–°–∫–∏–Ω—É—Ç–∏</button>
        </form>
      </div>
      
      <div className="rentals-content">
        {rentedItems.length === 0 ? (
          <div className="empty-rentals">
            <div className="empty-rentals-icon">üì¶</div>
            <h2>–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –æ—Ä–µ–Ω–¥–æ–≤–∞–Ω–∏—Ö —Ç–æ–≤–∞—Ä—ñ–≤</h2>
            <p>–ü–µ—Ä–µ–π–¥—ñ—Ç—å –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É <a href="/equipment">–û–±–ª–∞–¥–Ω–∞–Ω–Ω—è</a>, —â–æ–± –æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ —Å–ø–æ—Ä—Ç–∏–≤–Ω–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è</p>
          </div>
        ) : (
          <>
            <div className="orders-list">
              {rentedItems.map((item) => (
                <div key={item.id} className="order">
                  <img src={item.image} alt={item.name} />
                  <div className="order-info">
                    <div className="order-details">
                      <div className="order-header">
                        <h3>{item.name}</h3>
                        <span className={`status-badge ${item.status.replace(' ', '-')}`}>
                          {item.status}
                        </span>
                      </div>
                      <p>–î–∞—Ç–∞ –æ—Ä–µ–Ω–¥–∏: {item.date ? new Date(item.date).toLocaleDateString() : ''}</p>
                      <p>–¶—ñ–Ω–∞: {item.price} –≥—Ä–Ω/–¥–µ–Ω—å</p>
                    </div>
                    <div className="order-actions">
                      {item.status === '–æ—á—ñ–∫—É—î –æ–ø–ª–∞—Ç–∏' && (
                        <button onClick={() => handlePayment(item.id)}>
                          –û–ø–ª–∞—Ç–∏—Ç–∏
                        </button>
                      )}
                      <button className="delete-order" onClick={() => handleDelete(item.id)}>
                        –í–∏–¥–∞–ª–∏—Ç–∏
                      </button>
                    </div>
                  </div>
                </div>
              ))}
            </div>
            
            {hasPendingItems && (
              <div className="pay-all-container">
                <button id="pay-all-btn" onClick={handlePayAll}>
                  –û–ø–ª–∞—Ç–∏—Ç–∏ –≤—Å–µ
                </button>
              </div>
            )}
          </>
        )}
      </div>
    </div>
  );
}

export default Rentals;