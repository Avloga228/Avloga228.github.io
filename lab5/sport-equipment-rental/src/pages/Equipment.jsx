import React, { useState, useEffect } from 'react';
import EquipmentCard from '../components/EquipmentCard';
import EquipmentModal from '../components/EquipmentModal';
import { onAuthStateChanged } from "firebase/auth";
import { auth, db } from "../firebase";
import { collection, getDocs, doc, updateDoc, increment } from "firebase/firestore";
import './Equipment.css';
import { apiPath } from '../config';

function Equipment() {
  const [equipment, setEquipment] = useState([]);
  const [showModal, setShowModal] = useState(false);
  const [selectedEquipment, setSelectedEquipment] = useState(null);
  const [showHiddenSection, setShowHiddenSection] = useState(false);
  const [selectedSportType, setSelectedSportType] = useState('–í—Å—ñ');
  const [filteredEquipment, setFilteredEquipment] = useState([]);
  const [user, setUser] = useState(null);
  const [loading, setLoading] = useState(true);
  const [dbError, setDbError] = useState(null);

  // –í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó
  useEffect(() => {
    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {
      setUser(currentUser);
    });
    return () => unsubscribe();
  }, []);

  // –û—Ç—Ä–∏–º–∞—Ç–∏ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –∑ Firestore
  useEffect(() => {
    const fetchInventory = async () => {
      setLoading(true);
      const querySnapshot = await getDocs(collection(db, "inventory"));
      const items = [];
      querySnapshot.forEach((docSnap) => {
        items.push({ id: docSnap.id, ...docSnap.data() });
      });
      setEquipment(items);
      setFilteredEquipment(items);
      setLoading(false);
    };
    fetchInventory();
  }, []);

  // –£–Ω—ñ–∫–∞–ª—å–Ω—ñ —Ç–∏–ø–∏ —Å–ø–æ—Ä—Ç—É –¥–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó
  const sportTypes = ['–í—Å—ñ', ...Array.from(new Set(equipment.map(item => item.sportType)))];

  // –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –∑–∞ —Ç–∏–ø–æ–º —Å–ø–æ—Ä—Ç—É
  useEffect(() => {
    if (selectedSportType === '–í—Å—ñ') {
      setFilteredEquipment(equipment);
    } else {
      const filtered = equipment.filter(item => item.sportType === selectedSportType);
      setFilteredEquipment(filtered);
    }
  }, [selectedSportType, equipment]);

  const handleCardClick = (item) => {
    setSelectedEquipment(item);
    setShowModal(true);
  };

  // –û—Ä–µ–Ω–¥–∞ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è: –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î API –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Ä–µ–Ω–¥–∏
  const handleRent = async (item) => {
    if (!user) {
      alert("–©–æ–± –æ—Ä–µ–Ω–¥—É–≤–∞—Ç–∏ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è, –ø–æ—Ç—Ä—ñ–±–Ω–æ —É–≤—ñ–π—Ç–∏ –≤ –∞–∫–∞—É–Ω—Ç!");
      return;
    }
    if (!item.quantity || item.quantity <= 0) {
      alert("–¶—å–æ–≥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –≤–∂–µ –Ω–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ.");
      return;
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å ID –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è
    if (!item.id) {
      alert("–ü–æ–º–∏–ª–∫–∞: –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ ID –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è!");
      return;
    }
    
    const equipmentId = String(item.id).trim();
    
    try {
      // –û—Ç—Ä–∏–º—É—î–º–æ –±–∞–∑–æ–≤–∏–π URL –¥–ª—è –∑–∞–ø–∏—Ç—É
      let requestUrl = apiPath('rentals');
      console.log("API –∑–∞–ø–∏—Ç –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î—Ç—å—Å—è –Ω–∞ URL:", requestUrl);
      
      // –î–æ–¥–∞—Ç–∫–æ–≤–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ URL –¥–ª—è Vercel
      if (window.location.hostname.includes('vercel.app') && 
          !requestUrl.includes('avloga228-github-io.onrender.com')) {
        console.error("–ö–†–ò–¢–ò–ß–ù–ê –ü–û–ú–ò–õ–ö–ê: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π URL API –Ω–∞ Vercel!");
        requestUrl = `https://avloga228-github-io.onrender.com/api/rentals`;
        console.log("–í–∏–ø—Ä–∞–≤–ª–µ–Ω–∏–π URL:", requestUrl);
      }
      
      // –î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏
      const rentalData = {
        userId: user.uid,
        equipmentId: equipmentId,
        name: item.name,
        price: item.price,
        date: new Date().toISOString(),
        status: "–æ—á—ñ–∫—É—î –æ–ø–ª–∞—Ç–∏",
        image: item.image,
        sportType: item.sportType
      };
      
      console.log("–î–∞–Ω—ñ –¥–ª—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏:", rentalData);
      
      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–æ–≤–∏–π API –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Ä–µ–Ω–¥–∏
      const response = await fetch(requestUrl, {
        method: 'POST',
        mode: 'cors',
        headers: {
          'Content-Type': 'application/json',
          'X-Client-Source': 'vercel-frontend'
        },
        credentials: 'omit',
        body: JSON.stringify(rentalData),
      });

      console.log("–í—ñ–¥–ø–æ–≤—ñ–¥—å –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:", response.status, response.statusText);

      if (!response.ok) {
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Ü–µ –ø–æ–º–∏–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        if (response.status === 503) {
          throw new Error('Database unavailable: –°–µ—Ä–≤—ñ—Å –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π');
        }
        
        // –°–ø—Ä–æ–±—É—î–º–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–≤–Ω–∏–π —Ç–µ–∫—Å—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –¥–ª—è –≤—ñ–¥–ª–∞–≥–æ–¥–∂–µ–Ω–Ω—è
        const errorText = await response.text().catch(e => '–ù–µ –≤–¥–∞–ª–æ—Å—è –ø—Ä–æ—á–∏—Ç–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å');
        console.error("–¢–µ–∫—Å—Ç –ø–æ–º–∏–ª–∫–∏ –≤—ñ–¥ —Å–µ—Ä–≤–µ—Ä–∞:", errorText);
        
        try {
          const errorData = JSON.parse(errorText);
          throw new Error(errorData.error || errorData.details || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –æ—Ä–µ–Ω–¥–∏');
        } catch (jsonError) {
          throw new Error(`–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –æ—Ä–µ–Ω–¥–∏: ${response.status} ${response.statusText}`);
        }
      }

      // –û–Ω–æ–≤–ª—é—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω (—â–æ–± –Ω–µ —á–µ–∫–∞—Ç–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ fetch)
      setEquipment(prev =>
        prev.map(eq => eq.id === item.id
          ? { ...eq, quantity: eq.quantity - 1 }
          : eq
        )
      );
      setFilteredEquipment(prev =>
        prev.map(eq => eq.id === item.id
          ? { ...eq, quantity: eq.quantity - 1 }
          : eq
        )
      );
      if (showModal) setShowModal(false);
      
    } catch (e) {
      console.error("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –æ—Ä–µ–Ω–¥–∏:", e);
      
      // –ü–æ–∫–∞–∑—É—î–º–æ —Ä—ñ–∑–Ω—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ —Ç–∏–ø—É –ø–æ–º–∏–ª–∫–∏
      if (e.message.includes('Database unavailable')) {
        alert("–°–µ—Ä–≤—ñ—Å –±–∞–∑–∏ –¥–∞–Ω–∏—Ö —Ç–∏–º—á–∞—Å–æ–≤–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.");
      } else {
        alert("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –æ—Ä–µ–Ω–¥–∏: " + e.message);
      }
    }
  };

  const handleSportTypeChange = (sportType) => {
    setSelectedSportType(sportType);
  };

  const getGridClass = () => {
    return filteredEquipment.length === 1 ? 'equipment-grid single-item' : 'equipment-grid';
  };

  return (
    <div className="equipment-page">
      <div className="hero">
        <div className="container">
          <h1>–í—ñ—Ç–∞—î–º–æ –≤ SportRent!</h1>
          <p>–ü—Ä–æ–∫–∞—á–∞–π —Å–≤–æ—ó –º–æ–∂–ª–∏–≤–æ—Å—Ç—ñ ‚Äì –æ—Ä–µ–Ω–¥—É–π —Å–ø–æ—Ä—Ç–∏–≤–Ω–µ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è —Ç–∞ –Ω–∞—Å–æ–ª–æ–¥–∂—É–π—Å—è –∞–∫—Ç–∏–≤–Ω–∏–º —Å–ø–æ—Å–æ–±–æ–º –∂–∏—Ç—Ç—è! 
          –í–µ–ª–æ—Å–∏–ø–µ–¥–∏, –∫–∞—è–∫–∏, —Ä–æ–ª–∏–∫–∏, –º'—è—á—ñ —Ç–∞ —â–µ –±–∞–≥–∞—Ç–æ —ñ–Ω—à–æ–≥–æ ‚Äì —É—Å–µ —Ü–µ –¥–æ—Å—Ç—É–ø–Ω–µ –¥–ª—è –æ—Ä–µ–Ω–¥–∏ –≤–∂–µ –∑–∞—Ä–∞–∑!</p>
          <button 
            id="toggle-btn" 
            className="hero-btn"
            onClick={() => setShowHiddenSection(!showHiddenSection)}
          >
            {showHiddenSection ? '–ü—Ä–∏—Ö–æ–≤–∞—Ç–∏ –∞–∫—Ü—ñ—ó' : '–î—ñ–∑–Ω–∞—Ç–∏—Å—è –ø—Ä–æ –∞–∫—Ü—ñ—ó'}
          </button>
          
          {showHiddenSection && (
            <div className="hidden-content">
              <h2>–°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—ó</h2>
              <div className="promo-grid">
                <div className="promo-card">
                  <h3>üéØ –í–∏–≥—ñ–¥–Ω–∞ –ø–∞–∫–µ—Ç–Ω–∞ –æ—Ä–µ–Ω–¥–∞</h3>
                  <p>–û—Ä–µ–Ω–¥—É–π—Ç–µ 3 –±—É–¥—å-—è–∫—ñ —Ç–æ–≤–∞—Ä–∏ —Ç–∞ –æ—Ç—Ä–∏–º–∞–π—Ç–µ –∑–Ω–∏–∂–∫—É 20% –Ω–∞ –≤–µ—Å—å –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è!</p>
                </div>
                <div className="promo-card">
                  <h3>‚è≥ –î–æ–≤–≥–æ—Å—Ç—Ä–æ–∫–æ–≤–∞ –æ—Ä–µ–Ω–¥–∞</h3>
                  <p>–ü—Ä–∏ –æ—Ä–µ–Ω–¥—ñ –≤—ñ–¥ 7 –¥–Ω—ñ–≤ - –∑–Ω–∏–∂–∫–∞ 15% –Ω–∞ –≤–µ—Å—å –ø–µ—Ä—ñ–æ–¥!</p>
                </div>
                <div className="promo-card">
                  <h3>üë• –î—Ä—É–∂–Ω—è –ø—Ä–æ–ø–æ–∑–∏—Ü—ñ—è</h3>
                  <p>–ü—Ä–∏–≤–µ–¥—ñ—Ç—å –¥—Ä—É–≥–∞ —ñ –æ—Ç—Ä–∏–º–∞–π—Ç–µ 10% –∑–Ω–∏–∂–∫—É –Ω–∞ –Ω–∞—Å—Ç—É–ø–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –æ–±–æ—Ö!</p>
                </div>
              </div>
              <div className="newsletter">
                <h3>–ü—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –Ω–∞—à—ñ –Ω–æ–≤–∏–Ω–∏</h3>
                <form onSubmit={(e) => { e.preventDefault(); alert('–í–∏ —É—Å–ø—ñ—à–Ω–æ –ø—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –Ω–∞ —Ä–æ–∑—Å–∏–ª–∫—É!'); }}>
                  <input type="email" placeholder="–í–∞—à email" required />
                  <button type="submit">–ü—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è</button>
                </form>
              </div>
            </div>
          )}
        </div>
      </div>

      <main className="container">
        <h1>–û–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–ª—è –æ—Ä–µ–Ω–¥–∏</h1>
        
        <div className="filter-container">
          <h3>–§—ñ–ª—å—Ç—Ä—É–≤–∞—Ç–∏ –∑–∞ –≤–∏–¥–æ–º —Å–ø–æ—Ä—Ç—É:</h3>
          <div className="sport-type-filter">
            {sportTypes.map(sportType => (
              <button 
                key={sportType} 
                className={`filter-btn ${selectedSportType === sportType ? 'active' : ''}`}
                onClick={() => handleSportTypeChange(sportType)}
              >
                {sportType}
              </button>
            ))}
          </div>
        </div>
        
        {loading ? (
          <div style={{textAlign: "center", margin: "40px 0", color: "#ff782b"}}>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</div>
        ) : (
          <section className={getGridClass()}>
            {filteredEquipment.length > 0 ? (
              filteredEquipment.map(item => (
                <EquipmentCard 
                  key={item.id} 
                  item={item} 
                  onRent={() => handleRent(item)}
                  onClick={() => handleCardClick(item)}
                />
              ))
            ) : (
              <div className="no-equipment">
                <p>–ù–∞ –∂–∞–ª—å, –Ω–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è –¥–ª—è —Ü—å–æ–≥–æ –≤–∏–¥—É —Å–ø–æ—Ä—Ç—É.</p>
              </div>
            )}
          </section>
        )}
      </main>

      {showModal && selectedEquipment && (
        <EquipmentModal 
          equipment={selectedEquipment} 
          onClose={() => setShowModal(false)}
          onRent={() => handleRent(selectedEquipment)}
        />
      )}
    </div>
  );
}

export default Equipment;